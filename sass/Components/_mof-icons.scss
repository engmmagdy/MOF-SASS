@font-face {
  font-family: 'MOFicons';
  src:  url('#{$icomoon-font-path}/MOFicons.eot?8c8hs1');
  src:  url('#{$icomoon-font-path}/MOFicons.eot?8c8hs1#iefix') format('embedded-opentype'),
    url('#{$icomoon-font-path}/MOFicons.ttf?8c8hs1') format('truetype'),
    url('#{$icomoon-font-path}/MOFicons.woff?8c8hs1') format('woff'),
    url('#{$icomoon-font-path}/MOFicons.svg?8c8hs1#MOFicons') format('svg');
  font-weight: normal;
  font-style: normal;
}

[class^="icon-"], [class*=" icon-"] {
  /* use !important to prevent issues with browser extensions that change fonts */
  font-family: 'MOFicons' !important;
  speak: none;
  font-style: normal;
  font-weight: normal;
  font-variant: normal;
  text-transform: none;
  line-height: 1;

  /* Better Font Rendering =========== */
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

@function unicode($str) {
  @return unquote("\"") + $str + unquote("\"");
}

.icon-alarm {
  &:before {
    content: unicode($icon-alarm); 
  }
}

.icon-contact {
  &:before {
    content: unicode($icon-contact); 
  }
}
.icon-home {
  &:before {
    content: unicode($icon-home); 
  }
}
.icon-info {
  &:before {
    content: unicode($icon-info); 
  }
}
.icon-phone-call {
  &:before {
    content: unicode($icon-phone-call); 
  }
}
.icon-placeholder {
  &:before {
    content: unicode($icon-placeholder); 
  }
}
.icon-question {
  &:before {
    content: unicode($icon-question); 
  }
}
.icon-settings {
  &:before {
    content: unicode($icon-settings); 
  }
}
.icon-sitemap {
  &:before {
    content: unicode($icon-sitemap); 
  }
}

